DROP TABLE IF EXISTS users;
CREATE TABLE users (
user_id INT NOT NULL IDENTITY(1, 1),
user_name                      VARCHAR(50)  NOT NULL,
	  user_pass                      VARCHAR(255) NOT NULL, -- NOTE: NEVER send raw password to server. Must be one way crypto hashed by app locally first.
	  user_email                     VARCHAR(255) NOT NULL,
	  user_type                      INT,
	  user_sensor_count              INT               DEFAULT 0, -- keep track of the user's sensor numbers
	  user_notification_on     INT               DEFAULT 1, -- If 1: notifications will be forwarded to user app
	  user_deleted INT  DEFAULT 0, -- If 0: user is active. If 1, user has deleted his account
	  PRIMARY KEY (user_id)
)
-- alter table users drop constraint single;
alter table users add constraint single unique(user_email);



DROP TABLE IF EXISTS user_sensor_pairing;
-- Many to one association sensor to user 
	CREATE TABLE user_sensor_pairing (
	  sensor_id           INT NOT NULL IDENTITY(1, 1),
	  user_id             INT, -- foreign key to table users
	  sensor_security_code       INT, -- you need to autogenerate any random 16 digits integer upon. More details later. 
  pairing_success INT DEFAULT 0,
  sensor_deleted INT DEFAULT 0,
	  PRIMARY KEY (sensor_id)
	)

DROP TABLE IF EXISTS sensor_data;
CREATE TABLE sensor_data (
data_id     INT NOT NULL,
sensor_id           INT,
humidity_value      INT,
humidity_alert  INT DEFAULT 0,
data_date DATETIME,
read_status INT DEFAULT 0, -- 1 == read, 0 == unread
PRIMARY KEY (data_id, sensor_id)
	)
